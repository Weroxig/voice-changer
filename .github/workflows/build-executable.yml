name: Package exe with PyInstaller

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build-all:
    build:
      strategy:
        matrix:
          include:
          # - os: windows-latest
          #   asset_name: ${{ github.event.repository.name }}-windows-amd64
          #   backend: cuda
          - os: windows-latest
            asset_name: ${{ github.event.repository.name }}-windows-amd64
            backend: dml
          # - os: macos-latest
          #   asset_name: ${{ github.event.repository.name }}-macos-amd64
          #   backend: cpu
          # - os: macos-latest
          #   asset_name: ${{ github.event.repository.name }}-macos-amd64
          #   backend: cuda
          - os: ubuntu-latest
            asset_name: ${{ github.event.repository.name }}-linux-amd64
            backend: cpu
          # - os: ubuntu-latest
          #   asset_name: ${{ github.event.repository.name }}-linux-amd64
          #   backend: cuda
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
        # cache: pip
    - name: Installing build dependencies
      run: python -m pip install --upgrade pip wheel setuptools pyinstaller
    - name: Installing project dependencies
      run: python -m pip install -r requirements-common.txt -r requirements-${{ matrix.backend }}.txt
      working-directory: ./server
    - name: Building executable
      run: pyinstaller --clean -y --dist ./dist --workpath /tmp MMVCServerSIO-${{ matrix.backend }}.spec
      working-directory: ./server
    - name: Uploading artifact
      uses: actions/upload-artifact@v4
      with:
        name: voice-changer-${{ matrix.asset_name }}-${{ matrix.backend }}
        path: ./server/dist
