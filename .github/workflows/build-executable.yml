name: Package exe with PyInstaller

on:
  push:
    branches: [ master-custom ]
  pull_request:
    branches: [ master-custom ]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build-all:
    strategy:
      matrix:
        include:
        - os: windows-latest
          os_suffix: windows-amd64
          backend: cuda
        - os: windows-latest
          os_suffix: windows-amd64
          backend: dml
        - os: macos-13
          os_suffix: macos-amd64
          backend: cpu
        - os: macos-latest
          os_suffix: macos-arm64
          backend: cpu
        - os: ubuntu-latest
          os_suffix: linux-amd64
          backend: cpu
        - os: ubuntu-latest
          os_suffix: linux-amd64
          backend: cuda
        # - os: ubuntu-latest
        #   os_suffix: linux-amd64
        #   backend: rocm
    runs-on: ${{ matrix.os }}
    env:
      BACKEND: ${{ matrix.backend }}
    steps:
    - name: Clean runner
      shell: bash
      run: rm -rf "$AGENT_TOOLSDIRECTORY"
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        # architecture: x64
        # cache: pip
    - name: Installing build dependencies
      run: python -m pip install --upgrade pip wheel setuptools pyinstaller
    - name: Installing project dependencies
      run: python -m pip install -r requirements-common.txt -r requirements-${{ matrix.backend }}.txt
      working-directory: ./server
    - name: Building executable
      run: pyinstaller --clean -y --dist ./dist --workpath /tmp MMVCServerSIO.spec
      working-directory: ./server
    - name: Pack artifact
      shell: bash
      run: |
        if [ "$RUNNER_OS" != "Windows" ]; then
          mkdir ./server/.tarballs
          tar cf ./server/.tarballs/voice-changer-${{ matrix.os_suffix }}-${{ matrix.backend }}.tar ./server/dist
          rm -rf ./server/dist/*
          mv ./server/.tarballs/voice-changer-${{ matrix.os_suffix }}-${{ matrix.backend }}.tar ./server/dist/
        fi
    - name: Uploading artifact
      uses: actions/upload-artifact@v4
      with:
        name: voice-changer-${{ matrix.os_suffix }}-${{ matrix.backend }}
        path: ./server/dist
